/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
eval("//import {ToDo} from './toDoClass';\n//import {updateProjects} from './addProjects';\n\nclass ToDo {\n    constructor(title, description, dueDate, priority){\n        this.title = title,\n        this.description =  description,\n        this.dueDate = dueDate,\n        this.priority = priority,\n        this.completion = false;\n    }\n\nset updateTitle(title){\n        this.title = title;     \n}\n\nset updateDescription(description){\n        this.description = description;\n}\n\nset updateDueDate(dueDate){\n        this.dueDate = dueDate;\n}\n\nset updatePriority(priority){\n        this.priority = priority;\n}\n\n}\n\n\nconst addTodo = document.querySelector(\"#addtodo\");\nconst toDoTitle = document.querySelector(\"#todotitle\");\nconst toDoDescription = document.querySelector(\"#tododescription\")\nconst toDoDate = document.querySelector(\"#tododate\")\nconst toDoPriority = document.querySelector(\"#todopriority\")\nconst toDoForm =  document.querySelector(\"#todoform\")\n\nconst projectName = document.querySelector(\"#projectname\")\nconst addProject = document.querySelector(\"#addproject\");\nconst projectForm = document.querySelector(\"#projectform\")\n\nconst projectChoice = document.querySelector(\"#projectchoice\");\nconst chooseProjects = document.querySelector(\"#projects\")\n\nconst lists = document.querySelector(\"#lists\");\n\nlet myProjects = [[\"Default\", []]];\n\nconst updateProjects = () => {\n    projectChoice.textContent = \"\";\n    chooseProjects.textContent = \"\";\n    for(let i = 0; i < myProjects.length; i++){\n        let project = document.createElement(\"option\");\n        project.setAttribute(\"value\", i);\n        project.textContent = `${myProjects[i][0]}`;\n        projectChoice.append(project);\n    }\n    for(let i = 0; i < myProjects.length; i++){\n        let project = document.createElement(\"option\");\n        project.setAttribute(\"value\", i);\n        project.textContent = `${myProjects[i][0]}`;\n        chooseProjects.append(project);\n    }\n\n}\n\nconst updateTodoList = () => {\n\n    let projectIndex = chooseProjects.value\n    lists.textContent = \"\"\n    for(let i = 0; i < myProjects[projectIndex][1].length; i++){\n        let todo = document.createElement(\"tr\");\n        todo.textContent = \n        `<td>${myProjects[projectIndex][1][i].title}</td>\n        `\n        lists.append(todo);\n    }\n}\n\naddTodo.addEventListener(\"click\", (e) => {\n    e.preventDefault();\n    let projectIndex = projectChoice.value;\n    let newtodo = new ToDo(toDoTitle.value, toDoDescription.value, toDoDate.value, toDoPriority.value);\n\n    myProjects[projectIndex][1].push(newtodo);\n    toDoForm.reset();\n    console.log(myProjects);\n    updateTodoList();\n})\n\n\naddProject.addEventListener(\"click\", (e) => {\n    e.preventDefault();\n    myProjects.push([projectName.value, []]);\n    projectForm.reset();\n    console.log(myProjects);\n    updateProjects();\n})\n\nchooseProjects.addEventListener(\"change\", updateTodoList);\n\n//# sourceURL=webpack://to-do-list/./src/index.js?");
/******/ })()
;